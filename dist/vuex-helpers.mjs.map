{"version":3,"file":null,"sources":["../lib/helpers/map_two_way_state.js","../lib/index.js"],"sourcesContent":["/**\r\n * Helper to map vuex state to two way computed properties.\r\n *\r\n * @param  {string|Object}  namespaceArg    the module namespace, or state mappings\r\n * @param  {Object}         mappingsArg     state mappings\r\n * @return {Object}\r\n */\r\nexport default function (namespaceArg, mappingsArg) {\r\n    // parse the arguments and normalize the mappings\r\n    const { namespace, mappings } = getArgs(namespaceArg, mappingsArg);\r\n    const normalizedMappings = normalizeMappings(mappings);\r\n\r\n    // take our normalized mappings and turn them into getters and setters\r\n    const twoWayMappings = {};\r\n\r\n    Object.keys(normalizedMappings).forEach((key) => {\r\n        twoWayMappings[key] = {\r\n            get: getter(namespace, normalizedMappings[key]),\r\n            set: setter(namespace, normalizedMappings[key]),\r\n        };\r\n    });\r\n\r\n    return twoWayMappings;\r\n}\r\n\r\n// helper function to parse the arguments\r\nfunction getArgs(first, second) {\r\n    return typeof first === 'string'\r\n        ? { namespace: first, mappings: second }\r\n        : { namespace: null, mappings: first };\r\n}\r\n\r\n// helper function to normalize two way state mappings\r\nfunction normalizeMappings(mappings) {\r\n    const normalizedMappings = {};\r\n\r\n    Object.keys(mappings).forEach((key) => {\r\n        const value = mappings[key];\r\n        let stateKey = key;\r\n        let mutation;\r\n\r\n        if (typeof value === 'string') {\r\n            mutation = value;\r\n        } else {\r\n            mutation = value.mutation;\r\n\r\n            if (typeof value.key === 'string') {\r\n                stateKey = value.key;\r\n            }\r\n        }\r\n\r\n        normalizedMappings[key] = { key: stateKey, mutation };\r\n    });\r\n\r\n    return normalizedMappings;\r\n}\r\n\r\n// helper to create a getter for two way mapped state\r\nfunction getter(namespace, mapping) {\r\n    if (typeof namespace === 'string') {\r\n        return function set() {\r\n            return this.$store.state[namespace][mapping.key];\r\n        };\r\n    }\r\n\r\n    return function set() {\r\n        return this.$store.state[mapping.key];\r\n    };\r\n}\r\n\r\n// helper to create a setter for two way mapped state\r\nfunction setter(namespace, mappings) {\r\n    let mutation = mappings.mutation;\r\n\r\n    if (typeof namespace === 'string') {\r\n        mutation = namespace + '/' + mutation;\r\n    }\r\n\r\n    return function set (value) {\r\n        this.$store.commit(mutation, value)\r\n    }\r\n}\r\n","import mapTwoWayState from './helpers/map_two_way_state';\n\nmodule.exports = {\n    mapTwoWayState,\n}\n"],"names":["namespaceArg","mappingsArg","getArgs","namespace","mappings","normalizedMappings","normalizeMappings","twoWayMappings","keys","forEach","key","getter","setter","first","second","value","stateKey","mutation","mapping","set","$store","state","commit","module","exports"],"mappings":"AAAA;;;;;;;AAOA,qBAAe,UAAUA,YAAV,EAAwBC,WAAxB,EAAqC;;mBAEhBC,QAAQF,YAAR,EAAsBC,WAAtB,CAFgB;QAExCE,SAFwC,YAExCA,SAFwC;QAE7BC,QAF6B,YAE7BA,QAF6B;;QAG1CC,qBAAqBC,kBAAkBF,QAAlB,CAA3B;;;QAGMG,iBAAiB,EAAvB;;WAEOC,IAAP,CAAYH,kBAAZ,EAAgCI,OAAhC,CAAwC,UAACC,GAAD,EAAS;uBAC9BA,GAAf,IAAsB;iBACbC,OAAOR,SAAP,EAAkBE,mBAAmBK,GAAnB,CAAlB,CADa;iBAEbE,OAAOT,SAAP,EAAkBE,mBAAmBK,GAAnB,CAAlB;SAFT;KADJ;;WAOOH,cAAP;;;;AAIJ,SAASL,OAAT,CAAiBW,KAAjB,EAAwBC,MAAxB,EAAgC;WACrB,OAAOD,KAAP,KAAiB,QAAjB,GACD,EAAEV,WAAWU,KAAb,EAAoBT,UAAUU,MAA9B,EADC,GAED,EAAEX,WAAW,IAAb,EAAmBC,UAAUS,KAA7B,EAFN;;;;AAMJ,SAASP,iBAAT,CAA2BF,QAA3B,EAAqC;QAC3BC,qBAAqB,EAA3B;;WAEOG,IAAP,CAAYJ,QAAZ,EAAsBK,OAAtB,CAA8B,UAACC,GAAD,EAAS;YAC7BK,QAAQX,SAASM,GAAT,CAAd;YACIM,WAAWN,GAAf;YACIO,iBAAJ;;YAEI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;uBAChBA,KAAX;SADJ,MAEO;uBACQA,MAAME,QAAjB;;gBAEI,OAAOF,MAAML,GAAb,KAAqB,QAAzB,EAAmC;2BACpBK,MAAML,GAAjB;;;;2BAIWA,GAAnB,IAA0B,EAAEA,KAAKM,QAAP,EAAiBC,kBAAjB,EAA1B;KAfJ;;WAkBOZ,kBAAP;;;;AAIJ,SAASM,MAAT,CAAgBR,SAAhB,EAA2Be,OAA3B,EAAoC;QAC5B,OAAOf,SAAP,KAAqB,QAAzB,EAAmC;eACxB,SAASgB,GAAT,GAAe;mBACX,KAAKC,MAAL,CAAYC,KAAZ,CAAkBlB,SAAlB,EAA6Be,QAAQR,GAArC,CAAP;SADJ;;;WAKG,SAASS,GAAT,GAAe;eACX,KAAKC,MAAL,CAAYC,KAAZ,CAAkBH,QAAQR,GAA1B,CAAP;KADJ;;;;AAMJ,SAASE,MAAT,CAAgBT,SAAhB,EAA2BC,QAA3B,EAAqC;QAC7Ba,WAAWb,SAASa,QAAxB;;QAEI,OAAOd,SAAP,KAAqB,QAAzB,EAAmC;mBACpBA,YAAY,GAAZ,GAAkBc,QAA7B;;;WAGG,SAASE,GAAT,CAAcJ,KAAd,EAAqB;aACnBK,MAAL,CAAYE,MAAZ,CAAmBL,QAAnB,EAA6BF,KAA7B;KADJ;;;AC5EJQ,OAAOC,OAAP,GAAiB;;CAAjB"}